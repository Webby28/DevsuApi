{
  "x-generator": "NSwag v14.0.7.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "api-devsu",
    "version": "v1"
  },
  "paths": {
    "/v1/api/persona": {
      "post": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "InsertarPersona",
        "description": "Endpoint que inserta datos en la tabla persona",
        "operationId": "ClientePersona_InsertarPersona",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "persona",
          "description": "Datos que se insertarán en la tabla persona",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Operación exitosa. Devuelve los datos de la persona que fue registrada en la base de datos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaEntity"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/cliente": {
      "post": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "InsertarCliente",
        "description": "Endpoint que crea un usuario para una persona.",
        "operationId": "ClientePersona_InsertarCliente",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "parametros",
          "description": "Datos que se insertarán en tabla cliente",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Operación exitosa. Devuelve los datos del cliente que fue registrado en la base de datos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteEntity"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/persona/{id}": {
      "get": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "ObtenerPersona",
        "description": "Endpoint que obtiene los datos de la persona en base a su id.",
        "operationId": "ClientePersona_ObtenerPersona",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id de la persona",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve una los datos de la persona.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaResponse"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado coicidencias.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaResponse"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "ActualizarPersona",
        "description": "Endpoint que actualiza los datos de una persona",
        "operationId": "ClientePersona_ActualizarPersona",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id persona a actualizar",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "persona",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonaRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve un modelo con los datos nuevos de la persona.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaUpdateDto"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado datos para actualizar.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaUpdateDto"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "EliminarPersona",
        "description": "Endpoint que elimina registro de la tabla persona.",
        "operationId": "ClientePersona_EliminarPersona",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id de la persona a eliminar",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve true si se ha eliminado."
          },
          "204": {
            "description": "No se han encontrado coincidencias para eliminar."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ClientePersonaController"
        ],
        "operationId": "ClientePersona_ActualizarPersonaPatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModifica",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificarEstadoRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Se actualizó el estado de la cuenta.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado la cuenta."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/cliente/{id}": {
      "get": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "ObtenerCliente",
        "description": "Endpoint que obtiene los datos del cliente.",
        "operationId": "ClientePersona_ObtenerCliente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id persona asociada al cliente",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve el cliente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteEntity"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado coicidencias.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteEntity"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "ActualizarCliente",
        "description": "Endpoint que actualiza los datos de un cliente.",
        "operationId": "ClientePersona_ActualizarCliente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id persona asociada al cliente",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "passwordAnterior",
            "in": "header",
            "description": "Contraseña Anterior del cliente, necesario para actualizar datos del cliente",
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "cliente",
          "description": "Datos del cliente a actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClienteUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve un modelo con los datos nuevos del cliente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteUpdateDto"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado datos para actualizar.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClienteUpdateDto"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClientePersonaController"
        ],
        "summary": "EliminarCliente",
        "description": "Endpoint que elimina registro de la tabla cliente.",
        "operationId": "ClientePersona_EliminarCliente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id de la persona asociada al cliente",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve true si se ha eliminado."
          },
          "204": {
            "description": "No se han encontrado coincidencias para eliminar."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ClientePersonaController"
        ],
        "operationId": "ClientePersona_ActualizarClientePatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModifica",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificarEstadoRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Se actualizó el estado de la cuenta.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado la cuenta."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/cuenta": {
      "post": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "InsertarCuenta",
        "description": "Endpoint que crea una cuenta para un cliente.",
        "operationId": "Movimientos_InsertarCuenta",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "cuenta",
          "description": "Datos a insertar en tabla cuenta",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CuentaRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Operación exitosa. Devuelve la cuenta creada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CuentaEntity"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/movimientos": {
      "post": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "InsertarMovimientos",
        "description": "Endpoint que inserta los datos de los movimientos realizados por una cuenta.",
        "operationId": "Movimientos_InsertarMovimientos",
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "movimiento",
          "description": "Datos a insertar en tabla movimiento",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovimientosRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Operación exitosa. Devuelve el movimiento realizado por la cuenta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovimientosEntity"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/cuenta/{id}": {
      "get": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "ObtenerCuenta",
        "description": "Endpoint que obtiene los datos de la cuenta de un cliente.",
        "operationId": "Movimientos_ObtenerCuenta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id de la cuenta",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve la cuenta de un cliente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CuentaEntity"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado la cuenta."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "ActualizarCuenta",
        "description": "Endpoint que actualiza los datos de la cuenta.",
        "operationId": "Movimientos_ActualizarCuenta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Numero de la cuenta a actualizar",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "cuenta",
          "description": "Datos nuevos para actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CuentaUpdateDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve los datos actualizados de la cuenta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CuentaEntity"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "EliminarCuenta",
        "description": "Endpoint que elimina la cuenta del cliente.",
        "operationId": "Movimientos_EliminarCuenta",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Cuenta a eliminar",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Se ha eliminado el registro con éxito.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaResponse"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MovimientosController"
        ],
        "operationId": "Movimientos_ActualizarCuentaPatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModifica",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificarEstadoRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Se actualizó el estado de la cuenta.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado la cuenta."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/movimientos/{id}": {
      "get": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "ObtenerMovimientos",
        "description": "Endpoint que obtiene el movimiento de una cuenta.",
        "operationId": "Movimientos_ObtenerMovimientos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id del movimiento",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Devuelve el movimiento de una cuenta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovimientosEntity"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado el movimiento."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "ActualizarMovimientos",
        "description": "Endpoint que actualiza los datos de los movimientos.",
        "operationId": "Movimientos_ActualizarMovimientos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id del movimiento a actualizar",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "movimientos",
          "description": "Datos nuevos para actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovimientoUpdateDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Se han actualizado los datos con éxito.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaResponse"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "EliminarMovimientos",
        "description": "Endpont que elimina un movimiento.",
        "operationId": "Movimientos_EliminarMovimientos",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Numero de la cuenta a eliminar",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Se ha eliminado el registro con éxito.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonaResponse"
                }
              }
            }
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MovimientosController"
        ],
        "operationId": "Movimientos_ActualizarMovimientosPatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requestModifica",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificarEstadoRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "Operación exitosa. Se actualizó el estado de la cuenta.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado la cuenta."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api/reportes": {
      "get": {
        "tags": [
          "MovimientosController"
        ],
        "summary": "GenerarReporte",
        "description": "Genera un reporte de los movimientos de una persona en un rango de fecha.",
        "operationId": "Movimientos_GenerarReporte",
        "parameters": [
          {
            "name": "rangoFechas",
            "in": "query",
            "description": "Rango de las fechas con separador | ",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "codigoCliente",
            "in": "query",
            "description": "Código del cliente asociado al movimiento",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": true,
            "description": "ApiKey para poder autorizar peticion",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa. Genera un pdf con los movimientos.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "No se ha encontrado el movimiento."
          },
          "400": {
            "description": "La solicitud es incorrecta.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado para realizar la operación.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PersonaEntity": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "idPersona",
          "nombre",
          "genero",
          "edad",
          "identificacion"
        ],
        "properties": {
          "idPersona": {
            "type": "integer",
            "format": "int32"
          },
          "nombre": {
            "type": "string",
            "description": "Nombre de la persona",
            "minLength": 1
          },
          "genero": {
            "type": "string",
            "description": "Género de la persona",
            "minLength": 1
          },
          "edad": {
            "type": "integer",
            "description": "Edad de la persona",
            "format": "int32"
          },
          "identificacion": {
            "type": "string",
            "description": "Identificación de la persona",
            "minLength": 1
          },
          "direccion": {
            "type": "string",
            "description": "Dirección de la persona",
            "nullable": true
          },
          "telefono": {
            "type": "string",
            "description": "Teléfono de la persona",
            "nullable": true
          },
          "estado": {
            "type": "string",
            "description": "Estado de la persona"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Clase predeterminada que retornara el error y el mensaje de error en caso de producirse excepciones",
        "additionalProperties": false,
        "properties": {
          "errorType": {
            "description": "Tipo de Error",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ErrorType"
              }
            ]
          },
          "errorDescription": {
            "type": "string",
            "description": "Mensaje de Error"
          }
        }
      },
      "ErrorType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "SIN_CAMBIOS",
          "VALIDACION_PARAMETROS_ENTRADA",
          "ERROR_INTERNO_EN_SERVIDOR",
          "DATOS_DUPLICADOS",
          "DATOS_NO_ENCONTRADOS",
          "ERROR_INTERNO",
          "PERSONA_NO_EXISTE",
          "CONTRASEÑA_INCORRECTA",
          "SIN_USUARIO",
          "USUARIO_NO_ACTIVO",
          "CUENTA_DUPLICADA",
          "CLIENTE_NO_EXISTE",
          "MOVIMIENTO_NO_EXISTE",
          "CUENTA_NO_EXISTE",
          "SALDO_EXCEDIDO",
          "CUENTA_CON_MOVIMIENTOS",
          "SIN_MOVIMIENTOS",
          "TIENE_USUARIO"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17
        ]
      },
      "PersonaRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nombre": {
            "type": "string",
            "description": "Nombre de la persona"
          },
          "genero": {
            "type": "string",
            "description": "Género de la persona"
          },
          "edad": {
            "type": "integer",
            "description": "Edad de la persona",
            "format": "int32"
          },
          "identificacion": {
            "type": "string",
            "description": "Identificación de la persona"
          },
          "direccion": {
            "type": "string",
            "description": "Dirección de la persona"
          },
          "telefono": {
            "type": "string",
            "description": "Teléfono de la persona"
          },
          "estado": {
            "type": "string",
            "description": "Estado de la persona"
          }
        }
      },
      "ClienteEntity": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "idCliente",
          "personaId",
          "contraseña",
          "estado"
        ],
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "personaId": {
            "type": "integer",
            "format": "int32"
          },
          "contraseña": {
            "type": "string",
            "description": "Contraseña del cliente",
            "minLength": 1
          },
          "estado": {
            "type": "string",
            "description": "Estado del cliente",
            "minLength": 1
          }
        }
      },
      "ClienteRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "personaId": {
            "type": "integer",
            "format": "int32"
          },
          "contraseña": {
            "type": "string",
            "description": "Contraseña del cliente"
          },
          "estado": {
            "type": "string",
            "description": "Estado del cliente"
          }
        }
      },
      "PersonaResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "numeroCuenta": {
            "type": "string"
          }
        }
      },
      "PersonaUpdateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nombre": {
            "type": "string"
          },
          "genero": {
            "type": "string"
          },
          "edad": {
            "type": "integer",
            "format": "int32"
          },
          "identificacion": {
            "type": "string"
          },
          "direccion": {
            "type": "string"
          },
          "telefono": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          }
        }
      },
      "ClienteUpdateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "idCliente": {
            "type": "integer",
            "format": "int32"
          },
          "personaId": {
            "type": "integer",
            "format": "int32"
          },
          "contraseña": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          }
        }
      },
      "ClienteUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contraseña": {
            "type": "string",
            "description": "Contraseña nueva del cliente"
          },
          "estado": {
            "type": "string",
            "description": "Estado del cliente"
          }
        }
      },
      "ModificarEstadoRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "estado": {
            "type": "string"
          }
        }
      },
      "CuentaEntity": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numeroCuenta",
          "tipoCuenta",
          "saldoInicial",
          "estado",
          "idCliente"
        ],
        "properties": {
          "numeroCuenta": {
            "type": "integer",
            "format": "int32"
          },
          "tipoCuenta": {
            "type": "string",
            "description": "Tipo de cuenta",
            "minLength": 1
          },
          "saldoInicial": {
            "type": "integer",
            "description": "Saldo inicial de la cuenta",
            "format": "int32"
          },
          "estado": {
            "type": "string",
            "description": "Estado de la cuenta. A (Activo) I (Inactivo)",
            "minLength": 1
          },
          "idCliente": {
            "type": "integer",
            "description": "Id del cliente asociado a la cuenta",
            "format": "int32"
          }
        }
      },
      "CuentaRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "numeroCuenta": {
            "type": "integer",
            "format": "int32"
          },
          "tipoCuenta": {
            "type": "string",
            "description": "Tipo de cuenta"
          },
          "saldoInicial": {
            "type": "integer",
            "description": "Saldo inicial de la cuenta",
            "format": "int32"
          },
          "estado": {
            "type": "string",
            "description": "Estado de la cuenta"
          },
          "idCliente": {
            "type": "integer",
            "description": "Cliente asociado a la cuenta",
            "format": "int32"
          }
        }
      },
      "MovimientosEntity": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "idMovimiento",
          "fecha",
          "tipoMovimiento",
          "valor",
          "saldo",
          "numeroCuenta"
        ],
        "properties": {
          "idMovimiento": {
            "type": "integer",
            "format": "int32"
          },
          "fecha": {
            "type": "string",
            "description": "Fecha del movimiento",
            "format": "date-time",
            "minLength": 1
          },
          "tipoMovimiento": {
            "type": "string",
            "description": "Tipo de movimiento",
            "minLength": 1
          },
          "valor": {
            "type": "integer",
            "description": "Valor del movimiento",
            "format": "int32"
          },
          "saldo": {
            "type": "integer",
            "description": "Saldo resultante después del movimiento",
            "format": "int32"
          },
          "numeroCuenta": {
            "type": "integer",
            "description": "Numero de cuenta asociada al movimiento",
            "format": "int32"
          },
          "fechaRegistro": {
            "type": "string",
            "description": "Fecha en que se registró la operación",
            "format": "date-time"
          },
          "estado": {
            "type": "string",
            "description": "Estado del movimiento. P (Pendiente) C (Completado)"
          }
        }
      },
      "MovimientosRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "fecha"
        ],
        "properties": {
          "fecha": {
            "type": "string",
            "description": "Fecha del movimiento",
            "minLength": 1
          },
          "tipoMovimiento": {
            "type": "string",
            "description": "Tipo de movimiento"
          },
          "valor": {
            "type": "integer",
            "description": "Valor del movimiento",
            "format": "int32"
          },
          "numeroCuenta": {
            "type": "integer",
            "description": "Numero de Cuenta asociada al movimiento",
            "format": "int32"
          }
        }
      },
      "CuentaUpdateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tipoCuenta": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          }
        }
      },
      "MovimientoUpdateDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tipoMovimiento": {
            "type": "string"
          },
          "valor": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ClientePersonaController",
      "description": "Controlador de Endpoints para Cliente y Persona."
    },
    {
      "name": "MovimientosController",
      "description": "Controlador de Endpoints para Movimientos y Cuentas."
    }
  ]
}